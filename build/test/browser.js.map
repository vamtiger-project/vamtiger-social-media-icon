{"version":3,"file":"browser.js","sources":["../../node_modules/vamtiger-browser-method/source/types.ts","../../node_modules/vamtiger-browser-method/source/get-meta-element.ts","../../node_modules/vamtiger-browser-method/source/get-camel-case.ts","../../node_modules/vamtiger-browser-method/source/load-element-query-css.ts","../../node_modules/vamtiger-browser-method/source/load-script.ts","../../source/test/browser.ts","../../source/test/load-script.ts"],"sourcesContent":["import * as tslib from '../node_modules/tslib/tslib';\nimport defineCustomElement from './define-custom-element';\n\nexport enum ScriptType {\n    jsonld = 'application/ld+json'\n}\n\nexport enum ScriptAttribute {\n    type = 'type'\n}\n\nexport enum DataAttribute {\n    vamtigerElementQuery = 'vamtigerLoadElementQueryCss',\n    elementQueryCssLoaded = 'elementQueryCssLoaded'\n}\n\nexport enum ErrorMessage {\n    failedToLoadScript = 'Failed to load script',\n    windowPropertyNotSet = 'Window property not set',\n    unsupportedFeature = 'Unsupported feature',\n    customElementAreadyDefined = 'Custom element already defined',\n    noElementName = 'No Element Name',\n    noTemplateUrl = 'No Template URL',\n    noElementSelector = 'No Template Selector',\n    noTemplateForUrl = 'No Template for URL',\n    noTemplate = 'No Template',\n    noElementForSelector = 'No Element for Selector'\n}\n\nexport enum StringConstant {\n    nothing = '',\n    slash = '/',\n    dash = '-'\n}\n\nexport enum TagName {\n    div = 'div'\n}\n\nexport enum LinkRel {\n    stylesheet = 'stylesheet'\n}\n\nexport enum LoadScriptElement {\n    script = 'script',\n    link = 'link',\n    style = 'style'\n}\n\nexport enum Selector {\n    lastStylesheet = 'style:last-of-type',\n    lastMetaElement = 'head > meta:last-of-type',\n    webcomponentsjs = 'script[src*=\"@webcomponents\\/webcomponentsjs\"]'\n}\n\nexport enum  MetaElementName {\n    loadElementQueryCss = 'vamtiger-load-element-query-css'\n}\n\nexport interface ILoadRemoteScriptParams {\n    src: string;\n}\n\nexport interface ILoadRemoteStylesheetScriptParams {\n    href: string;\n}\n\nexport interface ILoadLocalScriptParams {\n    name: string;\n    removeFromDom?: boolean;\n}\n\nexport interface ILoadScriptParams {\n    js: string;\n    jsonld?: boolean;\n}\n\nexport interface ILoadStylesheetScriptParams {\n    css: string;\n}\n\nexport interface ILoadScript {\n    params: LocalScriptParams\n        | LocalStylesheetScriptParams\n        | ILoadRemoteScriptParams\n        | ILoadRemoteStylesheetScriptParams;\n    reject: (error: Error) => void\n}\n\nexport interface ILoadShadowStylesheet {\n    css: string;\n    element: HTMLElement;\n}\n\nexport interface IDefineCustomElement {\n    name: string;\n    constructor: {\n        new (): HTMLElement\n        prototype: HTMLElement;\n    };\n    ignore?: boolean;\n}\n\nexport interface IPause {\n    milliseconds: number;\n}\n\nexport interface IGetElementBase {\n    name: string;\n}\n\nexport interface IGetElementTemplate extends IGetElementBase {\n    template: string;\n}\n\nexport interface IGetElementUrl extends IGetElementBase {\n    url: string;\n    selector:  string;\n}\n\nexport interface IAnyObject {\n    [key: string]: any;\n}\n\nexport interface ILoadElementQueryCss {\n    css: string;\n    stylesheetName?: string;\n    hostName?: string;\n}\n\nexport interface IGetMetaElement {\n    selector?: string;\n    properties?: {\n        id?: string;\n    };\n    attributes?: {\n        [key: string]: string;\n    };\n    dataset?: DOMStringMap;\n}\n\nexport type TsLibType = typeof tslib;\n\nexport type TsLibKey = keyof TsLibType;\n\nexport type TsLib = {\n    [K in TsLibKey]: TsLibType[K]\n}\n\nexport type LocalScriptParams = ILoadLocalScriptParams & ILoadScriptParams;\n\nexport type LocalStylesheetScriptParams = ILoadLocalScriptParams & ILoadStylesheetScriptParams;\n\nexport type LoadScriptParams = LocalScriptParams\n    | LocalStylesheetScriptParams\n    | ILoadRemoteScriptParams\n    | ILoadRemoteStylesheetScriptParams;\n\nexport type LoadScriptsParams = LoadScriptParams[];\n\nexport type LoadScriptsSequentiallyParams = LoadScriptsParams[];\n\nexport type LoadedScript<P extends ILoadScript['params']> =\n    P extends ILoadScriptParams ? HTMLScriptElement :\n    P extends ILoadStylesheetScriptParams ? HTMLStyleElement :\n    P extends ILoadRemoteScriptParams ? HTMLScriptElement :\n    P extends ILoadRemoteStylesheetScriptParams ? HTMLLinkElement :\n    never;\n\nexport type LoadedScripts<P extends LoadScriptsParams> =\n    P extends ILoadScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[] ? HTMLLinkElement[] :\n    never;\n\nexport type LoadedScriptsSequentially<P extends LoadScriptsSequentiallyParams> =\n    P extends ILoadScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadStylesheetScriptParams[][] ? HTMLStyleElement[] :\n    P extends ILoadRemoteScriptParams[][] ? HTMLScriptElement[] :\n    P extends ILoadRemoteStylesheetScriptParams[][] ? HTMLLinkElement[] :\n    never;\n\nexport type GetElementParams = IGetElementTemplate | IGetElementUrl;\n\ndeclare global {\n    interface Window extends TsLib {\n        VamtigerBrowserMethod: {\n            loadScript: <P extends ILoadScript['params']>(params: P) => Promise<LoadedScript<P>>;\n            loadScripts: <P extends LoadScriptsParams>(params: P) => Promise<LoadedScripts<P>>;\n            loadScriptsSequentially: <P extends LoadScriptsSequentiallyParams>(params: P) => Promise<LoadedScriptsSequentially<P>>;\n            loadShadowStylesheet: (params: ILoadShadowStylesheet) => void;\n            defineCustomElement: (params: IDefineCustomElement) => void;\n            getElement: (params: GetElementParams) => Promise<HTMLElement>;\n            pause: (params: IPause) => Promise<{}>;\n        }\n        EQCSS: IAnyObject;\n    }\n\n    namespace NodeJS {\n        interface  Global {\n            VamtigerBrowserMethod: Window['VamtigerBrowserMethod'];\n        }\n    }\n}\n\nexport const regex = {\n    showRootHost: /:{1,2}host/gm,\n    dash: new RegExp(StringConstant.dash, 'g'),\n    space: /\\s/g,\n    nonWord: /\\W+/g\n}","import {\n    IGetMetaElement,\n    StringConstant,\n    Selector\n} from './types';\n\nconst { nothing } = StringConstant;\n\nexport default function ({ selector = nothing, properties = {}, dataset = {}, attributes = {}}: IGetMetaElement) {\n    const { id } = properties;\n    const { head } = document;\n    const lastMetaElement = head.querySelector<HTMLMetaElement>(Selector.lastMetaElement);\n    const attributeKeys = Object.keys(attributes);\n    const existingMetaElement = id && ((window as any)[id]\n        || selector && head.querySelector(selector)) as HTMLMetaElement;\n    const newMetaElment = !existingMetaElement && document.createElement('meta');\n    const metaElement = (existingMetaElement || newMetaElment) as HTMLMetaElement;\n\n    let dataKey: string;\n\n    if (newMetaElment) {\n        Object.assign(newMetaElment, properties);\n        Object.assign(newMetaElment.dataset, dataset);\n\n        if (lastMetaElement && lastMetaElement.nextElementSibling) {\n            head.insertBefore(\n                newMetaElment,\n                lastMetaElement.nextElementSibling\n            );\n        } else {\n            head.appendChild(newMetaElment);\n        }\n    }\n\n    attributeKeys.forEach(key => !metaElement.hasAttribute(key) && metaElement.setAttribute(dataKey, attributes[key]));\n\n    return metaElement;\n}","import {\n    regex,\n    StringConstant\n} from './types';\n\nconst { nothing } = StringConstant;\nconst { nonWord } = regex;\n\nexport default (input: string) => input\n    .split(nonWord)\n    .map((word, index) => !index && word.toLowerCase() || word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase())\n    .join(nothing);","import {\n    ILoadElementQueryCss,\n    MetaElementName,\n    StringConstant,\n    regex\n} from './types';\nimport getMetaElment from './get-meta-element';\nimport getCamelCase from './get-camel-case';\n\nconst { showRootHost } = regex;\nconst { nothing } = StringConstant;\n\nexport default function({ css, stylesheetName: currentStylesheetName = nothing, hostName = nothing }: ILoadElementQueryCss) {\n    const metaElement = getMetaElment({\n        properties: {\n            id: MetaElementName.loadElementQueryCss\n        }\n    });\n    const stylesheetName = getCamelCase(currentStylesheetName);\n    const { dataset } = metaElement;\n    const elementQueryCss = !dataset.hasOwnProperty(hostName) && (hostName && css.replace(showRootHost, hostName)) || css;\n    const { EQCSS } = window;\n\n    if (elementQueryCss && EQCSS) {\n        EQCSS.register(EQCSS.parse(elementQueryCss));\n\n        if (stylesheetName) {\n            dataset[stylesheetName] = nothing;\n        } else if (hostName) {\n            dataset[hostName] = nothing;\n        }\n    }\n}","import {\n    ILoadScript,\n    ErrorMessage,\n    LocalScriptParams,\n    LocalStylesheetScriptParams,\n    ILoadRemoteStylesheetScriptParams,\n    ILoadRemoteScriptParams,\n    LoadScriptElement,\n    LoadedScript,\n    LinkRel,\n    ScriptAttribute,\n    ScriptType\n} from './types';\nimport loadElementQueryCss from './load-element-query-css';\n\nconst { failedToLoadScript } = ErrorMessage;\nconst { stylesheet } = LinkRel;\nconst { script: scriptElement, link, style } = LoadScriptElement;\n\nexport default <P extends ILoadScript['params']>(params: P) => new Promise((resolve: (script: LoadedScript<P>) => void, reject: ILoadScript['reject']) => {\n    const { head, body } = document;\n    const { js, name: scriptName, jsonld, removeFromDom } = params as LocalScriptParams;\n    const { src } = params as ILoadRemoteScriptParams;\n    const { css, name: stylesheetName } = params as LocalStylesheetScriptParams;\n    const { href } = params as ILoadRemoteStylesheetScriptParams;\n    const remoteScript = params.hasOwnProperty('src') || params.hasOwnProperty('href');\n    const element = (js || src) && scriptElement\n        || css && style\n        || href && link;\n    const selector = src && `script[src=\"${src}\"]`\n        || href && `link[href=\"${href}\"]`\n        || js && scriptName && `script[data-name=\"${scriptName}\"]`\n        || css && stylesheetName && `style[data-name=\"${stylesheetName}\"]`;\n    const existingScript = (head.querySelector(selector) || body.querySelector(selector)) as LoadedScript<P>;\n    const script = selector\n        && element\n        && document.createElement(element) as LoadedScript<P>;\n\n    if (script instanceof HTMLScriptElement) {\n        if (src) {\n            script.src = src;\n        } else if (js) {\n            script.innerHTML = js;\n            script.dataset.name = scriptName;\n\n            if (jsonld) {\n                script.setAttribute(ScriptAttribute.type, ScriptType.jsonld);\n            }\n        }\n    } else if (script instanceof HTMLLinkElement) {\n        script.rel = stylesheet;\n        script.href = href;\n    } else if (script instanceof HTMLStyleElement) {\n        script.innerHTML = css;\n        script.dataset.name = stylesheetName;\n\n        loadElementQueryCss({\n            css,\n            stylesheetName\n        });\n    }\n\n    if (existingScript) {\n        resolve(existingScript);\n    } else if (script) {\n        script.addEventListener('load', handleLoad);\n        script.addEventListener('error', handleLoadError);\n\n        head.appendChild(script);\n\n        if (!remoteScript) {\n            handleLoad();\n        }\n    }\n\n    function handleLoad() {\n        if (script) {\n            removeEventListeners();\n\n            if (removeFromDom) {\n                head.removeChild(script);\n            }\n\n            resolve(script);\n        }\n    }\n\n    function handleLoadError(event: Event) {\n        removeEventListeners();\n\n        console.error(event);\n\n        reject(new Error(`${failedToLoadScript}`));\n    }\n\n    function removeEventListeners() {\n        if (script) {\n            script.removeEventListener('load', handleLoad);\n            script.removeEventListener('error', handleLoadError);\n        }\n    }\n});\n","import { setup, run } from 'mocha';\nimport loadScript from './load-script';\n\nsetup('bdd');\n\nloadScript();\n\nrun();","import loadScript from '../../node_modules/vamtiger-browser-method/source/load-script';\nimport { expect } from 'chai';\n\nexport default () => describe('vamtiger-social-media-icon', function () {\n    before(async function () {\n        await loadScript({\n            src: 'vamtiger-social-media-icon.js'\n        });\n    });\n\n    it('load script', async function() {\n        const script = document.head.querySelector('[src=\"vamtiger-social-media-icon.js\"]');\n\n        expect(script instanceof HTMLScriptElement).to.be.true;\n    });\n});"],"names":["ScriptType","ScriptAttribute","DataAttribute","ErrorMessage","StringConstant","TagName","LinkRel","LoadScriptElement","Selector","MetaElementName","regex","showRootHost","dash","RegExp","space","nonWord","nothing","input","split","map","word","index","toLowerCase","slice","toUpperCase","join","css","stylesheetName","currentStylesheetName","hostName","metaElement","selector","properties","dataset","attributes","id","head","document","lastMetaElement","querySelector","attributeKeys","Object","keys","existingMetaElement","window","newMetaElment","createElement","assign","nextElementSibling","insertBefore","appendChild","forEach","key","hasAttribute","setAttribute","dataKey","getMetaElment","loadElementQueryCss","getCamelCase","elementQueryCss","hasOwnProperty","replace","EQCSS","register","parse","failedToLoadScript","stylesheet","script","scriptElement","link","style","setup","describe","before","async","params","Promise","resolve","reject","body","js","name","scriptName","jsonld","removeFromDom","src","href","remoteScript","element","existingScript","handleLoad","removeEventListeners","removeChild","handleLoadError","event","console","error","Error","removeEventListener","HTMLScriptElement","innerHTML","type","HTMLLinkElement","rel","HTMLStyleElement","addEventListener","loadScript","it","expect","to","be","true","run"],"mappings":"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"}